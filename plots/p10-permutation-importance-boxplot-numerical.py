import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
# gnb x1 5.551115123125783e-17
# gnb x2 5.551115123125783e-17
# knn x1 0.20800000000000007
# knn x2 -1.1102230246251565e-16
# rfc x1 0.40599999999999997
# rfc x2 -1.1102230246251565e-16
def cm2inch(*tupl):
    inch = 2.54
    if isinstance(tupl[0], tuple):
        return tuple(i/inch for i in tupl[0])
    else:
        return tuple(i/inch for i in tupl)



columns = ['permutation importance', 'labels']
df = pd.DataFrame([
    [0.512, 'x1_knn_leave_one_out'],
    [0.33999999999999997, 'x1_knn_leave_one_out'],
    [0.3299999999999999, 'x1_knn_leave_one_out'],
    [0.3499999999999999, 'x1_knn_leave_one_out'],
    [0.512, 'x1_knn_leave_one_out'],
    [0.45199999999999996, 'x2_knn_leave_one_out'],
    [0.3979999999999999, 'x2_knn_leave_one_out'],
    [0.38999999999999996, 'x2_knn_leave_one_out'],
    [0.37799999999999995, 'x2_knn_leave_one_out'],
    [0.46799999999999997, 'x2_knn_leave_one_out'],

    [0.4800000000000001, 'x1_rfc_leave_one_out'],
    [0.46799999999999997, 'x1_rfc_leave_one_out'],
    [0.40599999999999997, 'x1_rfc_leave_one_out'],
    [0.512, 'x1_rfc_leave_one_out'],
    [0.4959999999999999, 'x1_rfc_leave_one_out'],
    [0.484, 'x2_rfc_leave_one_out'],
    [0.46799999999999997, 'x2_rfc_leave_one_out'],
    [0.41200000000000003, 'x2_rfc_leave_one_out'],
    [0.45599999999999985, 'x2_rfc_leave_one_out'],
    [0.508, 'x2_rfc_leave_one_out'],

    [0.0, 'x1_gnb_leave_one_out'],
    [-0.23199999999999998, 'x1_gnb_leave_one_out'],
    [0.026000000000000023, 'x1_gnb_leave_one_out'],
    [0.014000000000000012, 'x1_gnb_leave_one_out'],
    [0.10200000000000004, 'x1_gnb_leave_one_out'],
    [0.008000000000000007, 'x2_gnb_leave_one_out'],
    [-0.10399999999999993, 'x2_gnb_leave_one_out'],
    [0.07200000000000006, 'x2_gnb_leave_one_out'],
    [0.05800000000000011, 'x2_gnb_leave_one_out'],
    [0.11199999999999999, 'x2_gnb_leave_one_out'],

    [0.32399999999999995, 'x1_knn_target'],
    [0.3999999999999999, 'x1_knn_target'],
    [0.4059999999999999, 'x1_knn_target'],
    [0.43, 'x1_knn_target'],
    [0.388, 'x1_knn_target'],
    [0.36599999999999994, 'x2_knn_target'],
    [0.498, 'x2_knn_target'],
    [0.4039999999999999, 'x2_knn_target'],
    [0.442, 'x2_knn_target'],
    [0.446, 'x2_knn_target'],

    [0.46399999999999986, 'x1_rfc_target'],
    [0.5280000000000001, 'x1_rfc_target'],
    [0.476, 'x1_rfc_target'],
    [0.4720000000000001, 'x1_rfc_target'],
    [0.5079999999999999, 'x1_rfc_target'],
    [0.5199999999999999, 'x2_rfc_target'],
    [0.504, 'x2_rfc_target'],
    [0.5239999999999999, 'x2_rfc_target'],
    [0.5119999999999999, 'x2_rfc_target'],
    [0.532, 'x2_rfc_target'],

    [5.551115123125783 * 10 ** -17, 'x1_gnb_target'],
    [-5.551115123125783 * 10 ** -17, 'x1_gnb_target'],
    [5.551115123125783 * 10 ** -17, 'x1_gnb_target'],
    [0.02799999999999997, 'x1_gnb_target'],
    [-5.551115123125783 * 10 ** -17, 'x1_gnb_target'],
    [-0.12, 'x2_gnb_target'],
    [-0.03999999999999998, 'x2_gnb_target'],
    [-0.13599999999999995, 'x2_gnb_target'],
    [-0.018000000000000016, 'x2_gnb_target'],
    [-0.043999999999999984, 'x2_gnb_target'],

    [0.392, 'x1_knn_ordinal'],
    [0.4099999999999999, 'x1_knn_ordinal'],
    [0.45399999999999996, 'x1_knn_ordinal'],
    [0.372, 'x1_knn_ordinal'],
    [0.43600000000000005, 'x1_knn_ordinal'],
    [0.3800000000000001, 'x2_knn_ordinal'],
    [0.396, 'x2_knn_ordinal'],
    [0.45399999999999996, 'x2_knn_ordinal'],
    [0.43599999999999994, 'x2_knn_ordinal'],
    [0.462, 'x2_knn_ordinal'],

    [0.52, 'x1_rfc_ordinal'],
    [0.44399999999999995, 'x1_rfc_ordinal'],
    [0.5040000000000001, 'x1_rfc_ordinal'],
    [0.43199999999999983, 'x1_rfc_ordinal'],
    [0.4079999999999999, 'x1_rfc_ordinal'],
    [0.508, 'x2_rfc_ordinal'],
    [0.5040000000000001, 'x2_rfc_ordinal'],
    [0.4840000000000001, 'x2_rfc_ordinal'],
    [0.48199999999999993, 'x2_rfc_ordinal'],
    [0.42399999999999993, 'x2_rfc_ordinal'],

    [-0.1880000000000001, 'x1_gnb_ordinal'],
    [5.551115123125783 * 10 ** -17, 'x1_gnb_ordinal'],
    [0.023999999999999966, 'x1_gnb_ordinal'],
    [-0.13599999999999995, 'x1_gnb_ordinal'],
    [0.17200000000000004, 'x1_gnb_ordinal'],
    [-0.10199999999999998, 'x2_gnb_ordinal'],
    [-0.0480000000000001, 'x2_gnb_ordinal'],
    [-0.09399999999999992, 'x2_gnb_ordinal'],
    [-0.023999999999999966, 'x2_gnb_ordinal'],
    [0.20600000000000002, 'x2_gnb_ordinal'],

    [0.422, 'x1_knn_woe'],
    [0.42000000000000004, 'x1_knn_woe'],
    [0.21999999999999997, 'x1_knn_woe'],
    [0.4960000000000001, 'x1_knn_woe'],
    [0.438, 'x1_knn_woe'],
    [0.45800000000000013, 'x2_knn_woe'],
    [0.446, 'x2_knn_woe'],
    [0.36200000000000004, 'x2_knn_woe'],
    [0.504, 'x2_knn_woe'],
    [0.454, 'x2_knn_woe'],

    [0.46399999999999986, 'x1_rfc_woe'],
    [0.508, 'x1_rfc_woe'],
    [0.47199999999999986, 'x1_rfc_woe'],
    [0.42000000000000015, 'x1_rfc_woe'],
    [0.5119999999999999, 'x1_rfc_woe'],
    [0.484, 'x2_rfc_woe'],
    [0.532, 'x2_rfc_woe'],
    [0.5120000000000001, 'x2_rfc_woe'],
    [0.5040000000000001, 'x2_rfc_woe'],
    [0.4839999999999999, 'x2_rfc_woe'],

    [-1.1102230246251565 * 10 ** -16, 'x1_gnb_woe'],
    [-0.22599999999999992, 'x1_gnb_woe'],
    [-5.551115123125783 * 10 ** -17, 'x1_gnb_woe'],
    [-0.038000000000000034, 'x1_gnb_woe'],
    [0.21800000000000003, 'x1_gnb_woe'],
    [0.007999999999999896, 'x2_gnb_woe'],
    [-0.20600000000000002, 'x2_gnb_woe'],
    [-0.02799999999999997, 'x2_gnb_woe'],
    [-0.023999999999999966, 'x2_gnb_woe'],
    [0.24200000000000005, 'x2_gnb_woe']
], columns=columns)

data_columns = ['x1_knn','x2_knn','x1_rfc','x2_rfc','x1_gnb','x2_gnb']

data_leaveoneout = [
[0.512,0.45199999999999996, 0.4800000000000001,0.484,0.0,0.008000000000000007],
[0.33999999999999997,0.3979999999999999, 0.46799999999999997,0.46799999999999997,-0.23199999999999998,-0.10399999999999993],
[0.3299999999999999,0.38999999999999996, 0.40599999999999997,0.41200000000000003,0.026000000000000023,0.07200000000000006],
[0.3499999999999999,0.37799999999999995, 0.512,0.45599999999999985,0.014000000000000012,0.05800000000000011],
[0.512,0.46799999999999997, 0.4959999999999999,0.508,0.10200000000000004,0.11199999999999999]
]
df_leaveoneout = pd.DataFrame(data_leaveoneout, columns=data_columns)
data_target = [
[0.32399999999999995,0.36599999999999994,0.46399999999999986,0.5199999999999999,5.551115123125783 * 10 ** -17,-0.12],
[0.3999999999999999,0.498,0.5280000000000001,0.504,-5.551115123125783 * 10 ** -17,-0.03999999999999998],
[0.4059999999999999,0.4039999999999999,0.476,0.5239999999999999,5.551115123125783 * 10 ** -17,-0.13599999999999995],
[0.43,0.442,0.4720000000000001,0.5119999999999999,0.02799999999999997,-0.018000000000000016],
[0.388,0.446,0.5079999999999999,0.532,-5.551115123125783 * 10 ** -17,-0.043999999999999984]
]
df_target = pd.DataFrame(data_target, columns=data_columns)
data_ordinal = [
[0.392,0.3800000000000001,0.52,0.508,-0.1880000000000001,-0.10199999999999998],
[0.4099999999999999,0.396,0.44399999999999995,0.5040000000000001,5.551115123125783 * 10 ** -17,-0.0480000000000001],
[0.45399999999999996,0.45399999999999996,0.5040000000000001,0.4840000000000001,0.023999999999999966,-0.09399999999999992],
[0.372,0.43599999999999994,0.43199999999999983,0.48199999999999993,-0.13599999999999995,-0.023999999999999966],
[0.43600000000000005,0.462,0.4079999999999999,0.42399999999999993,0.17200000000000004,0.20600000000000002]
]
df_ordinal = pd.DataFrame(data_ordinal, columns=data_columns)
data_woe = [
[0.422,0.45800000000000013,0.46399999999999986,0.484,-1.1102230246251565 * 10 ** -16,0.007999999999999896],
[0.42000000000000004,0.446,0.508,0.532,-0.22599999999999992,-0.20600000000000002],
[0.21999999999999997,0.36200000000000004,0.47199999999999986,0.5120000000000001,-5.551115123125783 * 10 ** -17,-0.02799999999999997],
[0.4960000000000001,0.504,0.42000000000000015,0.5040000000000001,-0.038000000000000034,-0.023999999999999966],
[0.438,0.454,0.5119999999999999,0.4839999999999999,0.21800000000000003,0.24200000000000005]
]
df_woe = pd.DataFrame(data_woe, columns=data_columns)

# df_leaveoneout.boxplot(rot=90, figsize=cm2inch(8, 8))
# df_ordinal.boxplot(rot=90, figsize=cm2inch(8, 8))
df_target.boxplot(rot=90, figsize=cm2inch(8, 8))
# df_woe.boxplot(rot=90, figsize=cm2inch(8, 8))
plt.subplots_adjust(bottom=0.2)
plt.ylim(-0.1, 0.5)
# plt.show()
plt.savefig("./images/p10-permutation-importance-boxplot-woe.svg")

# ax = df.boxplot(
# column='permutation importance',
# by='labels',
# figsize=cm2inch(14.69, 10.5),
# rot=90,
# fontsize=6
# )
#
# ax.set_xlabel('')
#
# plt.suptitle("")
# plt.subplots_adjust(bottom=0.3)
#
# # plt.show()
# plt.savefig("./images/p10-permutation-importance-boxplot-numerical.svg")
