import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

def cm2inch(*tupl):
    inch = 2.54
    if isinstance(tupl[0], tuple):
        return tuple(i/inch for i in tupl[0])
    else:
        return tuple(i/inch for i in tupl)



columns = ['permutation importance', 'labels']
df = pd.DataFrame([
    [0.4886868686868687, 'x1_knn_leave_one_out'],
    [0.4878787878787879, 'x1_knn_leave_one_out'],
    [0.49737373737373736, 'x1_knn_leave_one_out'],
    [0.49737373737373747, 'x1_knn_leave_one_out'],
    [0.4868686868686869, 'x1_knn_leave_one_out'],
    [0.1070707070707071, 'x2_knn_leave_one_out'],
    [0.09070707070707074, 'x2_knn_leave_one_out'],
    [0.08686868686868687, 'x2_knn_leave_one_out'],
    [0.08525252525252502, 'x2_knn_leave_one_out'],
    [0.07393939393939397, 'x2_knn_leave_one_out'],

    [0.4888888888888888, 'x1_rfc_leave_one_out'],
    [0.4937373737373737, 'x1_rfc_leave_one_out'],
    [0.49696969696969695, 'x1_rfc_leave_one_out'],
    [0.49616161616161614, 'x1_rfc_leave_one_out'],
    [0.4953535353535353, 'x1_rfc_leave_one_out'],
    [0.10484848484848486, 'x2_rfc_leave_one_out'],
    [0.10303030303030314, 'x2_rfc_leave_one_out'],
    [0.0884848484848485, 'x2_rfc_leave_one_out'],
    [0.08444444444444454, 'x2_rfc_leave_one_out'],
    [0.07353535353535356, 'x2_rfc_leave_one_out'],

    [0.44767676767676773, 'x1_gnb_leave_one_out'],
    [0.4385858585858585, 'x1_gnb_leave_one_out'],
    [0.444040404040404, 'x1_gnb_leave_one_out'],
    [0.4513131313131312, 'x1_gnb_leave_one_out'],
    [0.474949494949495, 'x1_gnb_leave_one_out'],
    [0.013535353535353511, 'x2_gnb_leave_one_out'],
    [0.009494949494949556, 'x2_gnb_leave_one_out'],
    [0.009090909090908927, 'x2_gnb_leave_one_out'],
    [0.004848484848484769, 'x2_gnb_leave_one_out'],
    [0.01090909090909098, 'x2_gnb_leave_one_out'],

    [0.4896969696969695, 'x1_knn_target'],
    [0.48525252525252527, 'x1_knn_target'],
    [0.4937373737373737, 'x1_knn_target'],
    [0.49737373737373736, 'x1_knn_target'],
    [0.48444444444444446, 'x1_knn_target'],
    [0.08141414141414116, 'x2_knn_target'],
    [0.08767676767676758, 'x2_knn_target'],
    [0.07393939393939386, 'x2_knn_target'],
    [0.09131313131313123, 'x2_knn_target'],
    [0.10626262626262617, 'x2_knn_target'],

    [0.5022222222222223, 'x1_rfc_target'],
    [0.4981818181818183, 'x1_rfc_target'],
    [0.4884848484848485, 'x1_rfc_target'],
    [0.48888888888888893, 'x1_rfc_target'],
    [0.5026262626262625, 'x1_rfc_target'],
    [0.09171717171717175, 'x2_rfc_target'],
    [0.0888888888888888, 'x2_rfc_target'],
    [0.07272727272727264, 'x2_rfc_target'],
    [0.09252525252525245, 'x2_rfc_target'],
    [0.1074747474747475, 'x2_rfc_target'],

    [0.44000000000000006, 'x1_gnb_target'],
    [0.46565656565656577, 'x1_gnb_target'],
    [0.44686868686868675, 'x1_gnb_target'],
    [0.44000000000000017, 'x1_gnb_target'],
    [0.4466666666666666, 'x1_gnb_target'],
    [0.002424242424242551, 'x2_gnb_target'],
    [0.013939393939393918, 'x2_gnb_target'],
    [0.010505050505050573, 'x2_gnb_target'],
    [0.004848484848484769, 'x2_gnb_target'],
    [0.004848484848484769, 'x2_gnb_target'],

    [0.4567676767676767, 'x1_knn_ordinal'],
    [0.4549494949494949, 'x1_knn_ordinal'],
    [0.44545454545454544, 'x1_knn_ordinal'],
    [0.45898989898989895, 'x1_knn_ordinal'],
    [0.44565656565656564, 'x1_knn_ordinal'],
    [0.07939393939393935, 'x2_knn_ordinal'],
    [0.07454545454545447, 'x2_knn_ordinal'],
    [0.04969696969696957, 'x2_knn_ordinal'],
    [0.06666666666666643, 'x2_knn_ordinal'],
    [0.05555555555555569, 'x2_knn_ordinal'],

    [0.49535353535353543, 'x1_rfc_ordinal'],
    [0.4933333333333333, 'x1_rfc_ordinal'],
    [0.5030303030303032, 'x1_rfc_ordinal'],
    [0.4993939393939394, 'x1_rfc_ordinal'],
    [0.5046464646464648, 'x1_rfc_ordinal'],
    [0.09575757575757549, 'x2_rfc_ordinal'],
    [0.101010101010101, 'x2_rfc_ordinal'],
    [0.08565656565656565, 'x2_rfc_ordinal'],
    [0.08363636363636362, 'x2_rfc_ordinal'],
    [0.09090909090909083, 'x2_rfc_ordinal'],

    [0.3688888888888888, 'x1_gnb_ordinal'],
    [0.39030303030303026, 'x1_gnb_ordinal'],
    [0.4092929292929293, 'x1_gnb_ordinal'],
    [0.39555555555555566, 'x1_gnb_ordinal'],
    [0.40242424242424246, 'x1_gnb_ordinal'],
    [-1.1102230246251565 * 10 ** -16, 'x2_gnb_ordinal'],
    [0.0, 'x2_gnb_ordinal'],
    [-0.00242424242424244, 'x2_gnb_ordinal'],
    [1.1102230246251565 * 10 ** -16, 'x2_gnb_ordinal'],
    [-0.0022222222222222365, 'x2_gnb_ordinal'],

    [0.47878787878787865, 'x1_knn_woe'],
    [0.4915151515151515, 'x1_knn_woe'],
    [0.49090909090909085, 'x1_knn_woe'],
    [0.5058585858585859, 'x1_knn_woe'],
    [0.4862626262626263, 'x1_knn_woe'],
    [0.07959595959595944, 'x2_knn_woe'],
    [0.09535353535353541, 'x2_knn_woe'],
    [0.08767676767676758, 'x2_knn_woe'],
    [0.07717171717171722, 'x2_knn_woe'],
    [0.09353535353535347, 'x2_knn_woe'],

    [0.49050505050505044, 'x1_rfc_woe'],
    [0.498989898989899, 'x1_rfc_woe'],
    [0.48929292929292934, 'x1_rfc_woe'],
    [0.49575757575757584, 'x1_rfc_woe'],
    [0.5058585858585858, 'x1_rfc_woe'],
    [0.08686868686868687, 'x2_rfc_woe'],
    [0.11515151515151523, 'x2_rfc_woe'],
    [0.09010101010101013, 'x2_rfc_woe'],
    [0.07919191919191937, 'x2_rfc_woe'],
    [0.10909090909090913, 'x2_rfc_woe'],

    [0.4440404040404041, 'x1_gnb_woe'],
    [0.42585858585858594, 'x1_gnb_woe'],
    [0.4694949494949495, 'x1_gnb_woe'],
    [0.4626262626262626, 'x1_gnb_woe'],
    [0.4418181818181819, 'x1_gnb_woe'],
    [0.004646464646464676, 'x2_gnb_woe'],
    [0.0, 'x2_gnb_woe'],
    [0.012727272727272476, 'x2_gnb_woe'],
    [0.006464646464646506, 'x2_gnb_woe'],
    [0.007272727272727431, 'x2_gnb_woe']
], columns=columns)

data_columns = ['x1_knn','x2_knn','x1_rfc','x2_rfc','x1_gnb','x2_gnb']

data_leaveoneout = [
[0.4886868686868687,0.1070707070707071,0.4888888888888888,0.10484848484848486,0.44767676767676773,0.013535353535353511],
[0.4878787878787879,0.09070707070707074,0.4937373737373737,0.10303030303030314,0.4385858585858585,0.009494949494949556],
[0.49737373737373736,0.08686868686868687,0.49696969696969695,0.0884848484848485,0.444040404040404,0.009090909090908927],
[0.49737373737373747,0.08525252525252502,0.49616161616161614,0.08444444444444454,0.4513131313131312,0.004848484848484769],
[0.4868686868686869,0.07393939393939397,0.4953535353535353,0.07353535353535356,0.474949494949495,0.01090909090909098],
]
df_leaveoneout = pd.DataFrame(data_leaveoneout, columns=data_columns)
data_target = [
[0.4896969696969695,0.08141414141414116,0.5022222222222223,0.09171717171717175,0.44000000000000006,0.002424242424242551],
[0.48525252525252527,0.08767676767676758,0.4981818181818183,0.0888888888888888,0.46565656565656577,0.013939393939393918],
[0.4937373737373737,0.07393939393939386,0.4884848484848485,0.07272727272727264,0.44686868686868675,0.010505050505050573],
[0.49737373737373736,0.09131313131313123,0.48888888888888893,0.09252525252525245,0.44000000000000017,0.004848484848484769],
[0.48444444444444446,0.10626262626262617,0.5026262626262625,0.1074747474747475,0.4466666666666666,0.004848484848484769],
]
df_target = pd.DataFrame(data_target, columns=data_columns)
data_ordinal = [
[0.4567676767676767,0.07939393939393935,0.49535353535353543,0.09575757575757549,0.3688888888888888,-1.1102230246251565 * 10 ** -16],
[0.4549494949494949,0.07454545454545447,0.4933333333333333,0.101010101010101,0.39030303030303026,0.0],
[0.44545454545454544,0.04969696969696957,0.5030303030303032,0.08565656565656565,0.4092929292929293,-0.00242424242424244],
[0.45898989898989895,0.06666666666666643,0.4993939393939394,0.08363636363636362,0.39555555555555566,1.1102230246251565 * 10 ** -16],
[0.44565656565656564,0.05555555555555569,0.5046464646464648,0.09090909090909083,0.40242424242424246,-0.0022222222222222365],
]
df_ordinal = pd.DataFrame(data_ordinal, columns=data_columns)
data_woe = [
[0.47878787878787865,0.07959595959595944,0.49050505050505044,0.08686868686868687,0.4440404040404041,0.004646464646464676],
[0.4915151515151515,0.09535353535353541,0.498989898989899,0.11515151515151523,0.42585858585858594,0.0],
[0.49090909090909085,0.08767676767676758,0.48929292929292934,0.09010101010101013,0.4694949494949495,0.012727272727272476],
[0.5058585858585859,0.07717171717171722,0.49575757575757584,0.07919191919191937,0.4626262626262626,0.006464646464646506],
[0.4862626262626263,0.09353535353535347,0.5058585858585858,0.10909090909090913,0.4418181818181819,0.007272727272727431],
]
df_woe = pd.DataFrame(data_woe, columns=data_columns)

# df_leaveoneout.boxplot(rot=90, figsize=cm2inch(8, 8))
# df_ordinal.boxplot(rot=90, figsize=cm2inch(8, 8))
# df_target.boxplot(rot=90, figsize=cm2inch(8, 8))
df_woe.boxplot(rot=90, figsize=cm2inch(8, 8))
plt.subplots_adjust(bottom=0.2)
plt.ylim(-0.1, 0.5)
# plt.show()
plt.savefig("./images/p100-permutation-importance-boxplot-woe.svg")

#
# ax = df.boxplot(
# column='permutation importance',
# by='labels',
# figsize=cm2inch(14.69, 10.5),
# rot=90,
# fontsize=6
# )
#
# ax.set_xlabel('')
#
# plt.suptitle("")
# plt.subplots_adjust(bottom=0.3)
#
# # plt.show()
# plt.savefig("./images/p100-permutation-importance-boxplot-numerical.svg")
